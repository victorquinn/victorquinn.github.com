<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Victor Quinn]]></title>
  <link href="http://victorquinn.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://victorquinn.com/"/>
  <updated>2013-01-06T15:46:07-05:00</updated>
  <id>http://victorquinn.com/</id>
  <author>
    <name><![CDATA[Victor Quinn]]></name>
    <email><![CDATA[inquiries@victorquinn.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git commit partial]]></title>
    <link href="http://victorquinn.com/blog/2012/10/18/git-commit-partial/"/>
    <updated>2012-10-18T10:38:00-04:00</updated>
    <id>http://victorquinn.com/blog/2012/10/18/git-commit-partial</id>
    <content type="html"><![CDATA[<p>One of my favorite git tricks is the ability to commit only part of a file. This is a short but sweet tip.</p>

<p>Just use:</p>

<p><code>bash
git add -p filename.rb
</code></p>

<p>This will ask you whether or not to stage each hunk of the file so you can commit that awesome change you made at the top, not stage the middle piece which is still a work in progress, and stage the piece at the bottom your team member needs to keep making progress.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solved: git svn broken in Mountain Lion DP2]]></title>
    <link href="http://victorquinn.com/blog/2012/03/20/solved-git-svn-broken-in-mountain-lion-dp2/"/>
    <updated>2012-03-20T22:08:00-04:00</updated>
    <id>http://victorquinn.com/blog/2012/03/20/solved-git-svn-broken-in-mountain-lion-dp2</id>
    <content type="html"><![CDATA[<p>Over this past weekend, I installed Mountain Lion Developer Preview 2 (DP2).</p>

<p>It came with another version of Xcode and I was heartbroken to once again see that git svn was broken!</p>

<p>However, I was relieved to find that my <a href="http://victorquinn.com/blog/2012/02/19/fix-git-svn-in-mountain-lion/">previous solution</a> worked like a charm. I was able to copy-paste the exact commands again and everything worked perfectly.</p>

<p>I updated the former post accordingly and it's available <a href="http://victorquinn.com/blog/2012/02/19/fix-git-svn-in-mountain-lion/">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solved: git svn broken in Mountain Lion]]></title>
    <link href="http://victorquinn.com/blog/2012/02/19/fix-git-svn-in-mountain-lion/"/>
    <updated>2012-02-19T12:20:00-05:00</updated>
    <id>http://victorquinn.com/blog/2012/02/19/fix-git-svn-in-mountain-lion</id>
    <content type="html"><![CDATA[<p>On Thursday, February 16 2012, Apple released the first beta of OS X 10.8 named <a href="http://www.apple.com/macosx/mountain-lion/">Mountain Lion</a> to Developers. I will refrain from discussing anything about the upcoming release for fear of violating Apple's NDA, but I did come across one problem that interfered with my workflow which I solved and the disclosure that solution will not violate the NDA.</p>

<p>I use <a href="http://git-scm.com/">git</a> to connect to my employer's <a href="http://subversion.apache.org/">subversion</a> server. I was using a package called git-svn which includes connectors between the two systems. Upon upgrading to the Mountain Lion beta, my <em>git svn</em> commands stopped working. The solution follows.</p>

<h3>Install Xcode</h3>

<p>First, install the latest version of Xcode (version 4.4) for Mountain Lion. An interesting note is that in Mountain Lion, Apple decided to move it from its former home in <em>/Developer/Xcode</em> to <em>/Applications/Xcode</em>. This was the root source of many of the issues as many of the utilities were searching in the wrong place for the appropriate binaries.</p>

<h3>Install Xcode Command Line Tools</h3>

<p>Another change they've made is that the command line tools are no longer installed by default. Previously, they were included with Xcode with no additional installation necessary. To install the command line tools, launch Xcode, open the Preferences, and switch to the Downloads tab:</p>

<p><img class="center" src="http://victorquinn.com/images/xcodepreferences.png"></p>

<p>One of the entries there is <em>Command Line Tools</em>. Mine already says <em>Installed</em> as I've already installed it, but if you haven't, it'll appear as an <em>Install</em> button as the iOS 4.0 and 3.0 Device Debugging Support entries do in my screenshot above.</p>

<h3>Link the svn Libraries</h3>

<p>After this, you may be tempted to run a <em>git svn</em> command and see what happens. I received the following output:</p>

<p><code>bash Can't locate error
$ git svn rebase
Can't locate SVN/Core.pm in @INC (@INC contains: /usr/local/Cellar/git/1.7.9.1/lib /Library/Perl/5.12/darwin-thread-multi-2level /Library/Perl/5.12 /Network/Library
/Perl/5.12/darwin-thread-multi-2level /Network/Library/Perl/5.12 /Library/Perl/Updates/5.12.4 /System/Library/Perl/5.12/darwin-thread-multi-2level /System/Library/P
erl/5.12 /System/Library/Perl/Extras/5.12/darwin-thread-multi-2level /System/Library/Perl/Extras/5.12 .) at /usr/local/Cellar/git/1.7.9.1/libexec/git-core/git-svn l
ine 41.
</code></p>

<p>The problem here is that the <em>git svn</em> command requires Perl libraries that aren't linked in Mountain Lion. <sup><a href="#gitsvn1">[1]</a></sup> So, we'll have to manually link them. Run the following in your terminal to link the library:</p>

<p>``` bash Link the second library
$ sudo ln -s /Applications/Xcode.app/Contents/Developer/Library/Perl/5.12/darwin-thread-multi-2level/SVN /System/Library/Perl/Extras/5.12/SVN</p>

<p>```</p>

<p>Now when you run <em>git svn rebase</em> you will likely be presented with a different error. This is good because it indicates progress! But obviously poor because it's not working.</p>

<p><code>bash Can't locate error
$ git svn rebase
Can't locate loadable object for module SVN::_Core in @INC (@INC contains: /usr/local/Cellar/git/1.7.9.1/lib /Library/Perl/5.12/darwin-thread-multi-2level /Library/
Perl/5.12 /Network/Library/Perl/5.12/darwin-thread-multi-2level /Network/Library/Perl/5.12 /Library/Perl/Updates/5.12.4 /System/Library/Perl/5.12/darwin-thread-mult
i-2level /System/Library/Perl/5.12 /System/Library/Perl/Extras/5.12/darwin-thread-multi-2level /System/Library/Perl/Extras/5.12 .) at /System/Library/Perl/Extras/5.
12/SVN/Base.pm line 59
BEGIN failed--compilation aborted at /System/Library/Perl/Extras/5.12/SVN/Core.pm line 5.
Compilation failed in require at /usr/local/Cellar/git/1.7.9.1/libexec/git-core/git-svn line 41.
</code></p>

<p>So now it appears it <em>can</em> find the Subversion core, but cannot find some other libraries it requires. Issue the following command to remedy this:</p>

<p><code>bash Link the second library
$ sudo ln -s /Applications/Xcode.app/Contents/Developer/Library/Perl/5.12/darwin-thread-multi-2level/auto/SVN/ /System/Library/Perl/Extras/5.12/auto/SVN
</code>
By doing this, we've now linked all of the Subversion Perl directories necessary for this command to run correctly.</p>

<p><em>Update - March 19</em>
<em>I installed Mountain Lion DP2 over the weekend which broke this again. However, my exact instructions still applied and fixed the issue. I simply needed to install the latest version of Xcode 4.4 (available from <a href="http://developer.apple.com/devcenter/mac">developer.apple.com</a>) and then run the commands listed above.</em></p>

<ol>
<li><a id="gitsvn1"></a> Note, I am using the version of git from <a href="http://mxcl.github.com/homebrew/">Homebrew</a>. Your outcome may differ slightly if you are using a different version or not using Homebrew.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solved: zsh git tab completion painfully slow]]></title>
    <link href="http://victorquinn.com/blog/2011/12/22/solved-zsh-git-tab-completion-painfully-slow/"/>
    <updated>2011-12-22T20:55:00-05:00</updated>
    <id>http://victorquinn.com/blog/2011/12/22/solved-zsh-git-tab-completion-painfully-slow</id>
    <content type="html"><![CDATA[<h2>Soooo slow</h2>

<p>First, I love zsh. It has a bunch of features that bash doesn't so I've been using it as my main shell for about three years.</p>

<p>That said, it hasn't been all great. Some time ago, I came across a major issue that almost made me stop using zsh. Basically, for sufficiently large projects, git tab completion was taking longer and longer. At first, it was a few seconds which, while annoying, wasn't fatal. Then it got worse and worse. This morning, if I had a file named foo.html and I typed <code>git diff fo</code> and hit tab, the command line would lock for up to 30 seconds, leaving me unable to do anything.</p>

<p>I had, in the past, spent some time searching and found a handful of pages in the zsh developer mailing lists discussing the problem as a known issue, but offering no solution. Some pointed to the way compinit recursively does things, others had other explanations, but no one offered a solution. There were technical grumblings about how it's a hard problem to solve, blah blah. I'm not saying it isn't a hard problem to solve, but it's pretty ridiculous that it isn't solved. In bash, this kind of thing is basically instant, there should be no way that they can't find some solution.</p>

<p><em>Bottom line, I no longer cared, I just wanted my freaking command line to not go unresponsive for such a long time.</em></p>

<h2>The solution</h2>

<p>I found the solution <a href="https://github.com/bobthecow/git-flow-completion/wiki/Update-Zsh-git-completion-module">here</a>. It was relatively simple, just replace the zsh _git with that version. And voila, all seems to work! Literally years of frustration seem to have vanished. I'm writing this hopefully to publicize it so more people are able to find the solution to this painful problem.</p>
]]></content>
  </entry>
  
</feed>
